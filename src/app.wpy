<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
    config = {
        pages: [
            'pages/index'
        ],
        window: {
            backgroundTextStyle: 'light',
            navigationBarBackgroundColor: '#fff',
            navigationBarTitleText: 'WeChat',
            navigationBarTextStyle: 'black'
        }
    }

    globalData = {
        userInfo: null,
        token: ''
    }

    constructor () {
        super()
        this.use('requestfix')
    }

    onLaunch() {
        this.testAsync()
    }

    sleep (s) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                resolve('promise resolved')
            }, s * 1000)
        })
    }

    async testAsync () {
        const data = await this.sleep(3)
        console.log(data)
    }

    async getUserInfo(cb) {
        const that = this
        if (this.globalData.userInfo) {
            return this.globalData.userInfo
        }

        const {code} = await new Promise((resolve, reject) => {
            wepy.login({
                success: resolve,
                fail: reject
            })
        })

        wepy.getUserInfo({
            async success (res) {
                that.globalData.userInfo = res.userInfo
                cb && cb(res.userInfo)

                const data = await wepy.request({
                    url: 'http://192.168.0.108:9001/api/login',
                    method: 'POST',
                    data: {
                        code,
                        encryptedData: res.encryptedData,
                        iv: res.iv,
                        signature: res.signature
                    },
                    success({data}) {
                        that.globalData.token = data.token
                    }
                })
            }
        })
    }
}
</script>
